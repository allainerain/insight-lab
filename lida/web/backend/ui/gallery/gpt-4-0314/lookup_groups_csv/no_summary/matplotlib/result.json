{"summary": {"file_name": "lookup_groups.csv"}, "goals": [{"index": 0, "question": "What is the distribution of group sizes?", "visualization": "Histogram of group_size", "rationale": "This visualization will help us understand the spread of group sizes and identify any outliers."}, {"index": 1, "question": "What is the most common group type?", "visualization": "Bar chart of group_type", "rationale": "This visualization will help us identify the most common group type and understand the distribution of group types."}, {"index": 2, "question": "What is the average age of group members?", "visualization": "Box plot of age", "rationale": "This visualization will help us understand the distribution of ages and identify any outliers. The box plot will also give us an idea of the median and quartiles."}, {"index": 3, "question": "What is the gender distribution of group members?", "visualization": "Pie chart of gender", "rationale": "This visualization will help us understand the proportion of males and females in the groups."}, {"index": 4, "question": "What is the distribution of group sizes by group type?", "visualization": "Stacked bar chart of group_type and group_size", "rationale": "This visualization will help us understand the distribution of group sizes for each group type and identify any patterns or trends."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['group_size'].plot.hist(bins=20, alpha=0.5, color='blue', edgecolor='black')\n    plt.title('What is the distribution of group sizes?', wrap=True)\n    plt.xlabel('Group Size')\n    plt.ylabel('Frequency')\n    plt.legend(['Group Size'])\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group by group_type and count the occurrences\n    group_counts = data['group_type'].value_counts()\n\n    # Create a bar chart of group_type\n    ax = group_counts.plot(kind='bar', color='c', legend=True)\n\n    # Set the title and labels\n    plt.title('What is the most common group type?', wrap=True)\n    plt.xlabel('Group Type')\n    plt.ylabel('Count')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.boxplot(data['age'])\n    plt.title(\"What is the average age of group members?\")\n    plt.xlabel(\"Group Members\")\n    plt.ylabel(\"Age\")\n    plt.axhline(data['age'].mean(), color='r', linestyle='--', label=f\"Average Age: {data['age'].mean():.2f}\")\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    gender_counts = data['gender'].value_counts()\n    plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%')\n    plt.title('What is the gender distribution of group members?', wrap=True)\n    plt.legend(gender_counts.index, title=\"Gender\", loc=\"upper right\")\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data_grouped = data.groupby(['group_type', 'group_size']).size().unstack(fill_value=0)\n    data_grouped.plot(kind='bar', stacked=True)\n    \n    plt.title(\"What is the distribution of group sizes by group type?\", wrap=True)\n    plt.xlabel(\"Group Type\")\n    plt.ylabel(\"Number of Groups\")\n    plt.legend(title=\"Group Size\", loc=\"upper right\")\n    plt.xticks(rotation=45)\n    \n    return plt;\n\nchart = plot(data)"]], "filename": "lookup_groups.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['group_size'].plot.hist(bins=20, alpha=0.5, color='blue', edgecolor='black')\n    plt.title('What is the distribution of group sizes?', wrap=True)\n    plt.xlabel('Group Size')\n    plt.ylabel('Frequency')\n    plt.legend(['Group Size'])\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'group_size'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'group_size'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'group_size'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group by group_type and count the occurrences\n    group_counts = data['group_type'].value_counts()\n\n    # Create a bar chart of group_type\n    ax = group_counts.plot(kind='bar', color='c', legend=True)\n\n    # Set the title and labels\n    plt.title('What is the most common group type?', wrap=True)\n    plt.xlabel('Group Type')\n    plt.ylabel('Count')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'group_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'group_type'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'group_type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.boxplot(data['age'])\n    plt.title(\"What is the average age of group members?\")\n    plt.xlabel(\"Group Members\")\n    plt.ylabel(\"Age\")\n    plt.axhline(data['age'].mean(), color='r', linestyle='--', label=f\"Average Age: {data['age'].mean():.2f}\")\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'age'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'age'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'age'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    gender_counts = data['gender'].value_counts()\n    plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%')\n    plt.title('What is the gender distribution of group members?', wrap=True)\n    plt.legend(gender_counts.index, title=\"Gender\", loc=\"upper right\")\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'gender'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'gender'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'gender'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data_grouped = data.groupby(['group_type', 'group_size']).size().unstack(fill_value=0)\n    data_grouped.plot(kind='bar', stacked=True)\n    \n    plt.title(\"What is the distribution of group sizes by group type?\", wrap=True)\n    plt.xlabel(\"Group Type\")\n    plt.ylabel(\"Number of Groups\")\n    plt.legend(title=\"Group Size\", loc=\"upper right\")\n    plt.xticks(rotation=45)\n    \n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'group_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'group_type'\n"}}]]}