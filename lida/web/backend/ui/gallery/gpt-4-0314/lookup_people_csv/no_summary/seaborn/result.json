{"summary": {"file_name": "lookup_people.csv"}, "goals": [{"index": 0, "question": "What is the age distribution of the people in the dataset?", "visualization": "Histogram of age", "rationale": "This visualization will help us understand the age range of the people in the dataset and identify any outliers or patterns."}, {"index": 1, "question": "What is the gender distribution of the people in the dataset?", "visualization": "Bar chart of gender", "rationale": "This visualization will help us understand the gender balance of the people in the dataset and identify any gender-based patterns or biases."}, {"index": 2, "question": "What is the distribution of education levels among the people in the dataset?", "visualization": "Pie chart of education level", "rationale": "This visualization will help us understand the educational background of the people in the dataset and identify any trends or patterns based on education level."}, {"index": 3, "question": "What is the distribution of income levels among the people in the dataset?", "visualization": "Box plot of income", "rationale": "This visualization will help us understand the income range of the people in the dataset and identify any outliers or patterns based on income level."}, {"index": 4, "question": "What is the relationship between age and income among the people in the dataset?", "visualization": "Scatter plot of age and income", "rationale": "This visualization will help us understand the correlation between age and income among the people in the dataset and identify any trends or patterns based on age and income level."}], "code": [["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data=data, x='age', bins=20, color='blue', kde=True)\n    plt.axvline(data['age'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median Age: {:.2f}'.format(data['age'].median())])\n    plt.title('What is the age distribution of the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    gender_counts = data['gender'].value_counts()\n    sns.barplot(x=gender_counts.index, y=gender_counts.values)\n    plt.xlabel('Gender')\n    plt.ylabel('Count')\n    plt.title('What is the gender distribution of the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    education_counts = data['education_level'].value_counts()\n    plt.pie(education_counts, labels=education_counts.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of education levels among the people in the dataset?', wrap=True)\n    plt.legend(education_counts.index, title=\"Education Levels\", loc=\"best\")\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.boxplot(x='income', data=data)\n    plt.title('What is the distribution of income levels among the people in the dataset?', wrap=True)\n    plt.xlabel('Income')\n    plt.ylabel('Frequency')\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.scatterplot(data=data, x='age', y='income')\n    plt.title('What is the relationship between age and income among the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)"]], "filename": "lookup_people.csv", "chart": [[{"spec": null, "status": true, "raster": "", "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data=data, x='age', bins=20, color='blue', kde=True)\n    plt.axvline(data['age'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median Age: {:.2f}'.format(data['age'].median())])\n    plt.title('What is the age distribution of the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": null}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    gender_counts = data['gender'].value_counts()\n    sns.barplot(x=gender_counts.index, y=gender_counts.values)\n    plt.xlabel('Gender')\n    plt.ylabel('Count')\n    plt.title('What is the gender distribution of the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'gender'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'gender'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'gender'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    education_counts = data['education_level'].value_counts()\n    plt.pie(education_counts, labels=education_counts.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of education levels among the people in the dataset?', wrap=True)\n    plt.legend(education_counts.index, title=\"Education Levels\", loc=\"best\")\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'education_level'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'education_level'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'education_level'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.boxplot(x='income', data=data)\n    plt.title('What is the distribution of income levels among the people in the dataset?', wrap=True)\n    plt.xlabel('Income')\n    plt.ylabel('Frequency')\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret input 'income'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_decorators.py\", line 46, in inner_f\n    return f(**kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/categorical.py\", line 2243, in boxplot\n    plotter = _BoxPlotter(x, y, hue, data, order, hue_order,\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/categorical.py\", line 406, in __init__\n    self.establish_variables(x, y, hue, data, orient, order, hue_order)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/categorical.py\", line 153, in establish_variables\n    raise ValueError(err)\nValueError: Could not interpret input 'income'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.scatterplot(data=data, x='age', y='income')\n    plt.title('What is the relationship between age and income among the people in the dataset?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `income` for parameter `y`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_decorators.py\", line 46, in inner_f\n    return f(**kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/relational.py\", line 808, in scatterplot\n    p = _ScatterPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/relational.py\", line 587, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `income` for parameter `y`\n"}}]]}