{"summary": {"file_name": "github.csv"}, "goals": [{"index": 0, "question": "What is the distribution of the number of stars for the repositories?", "visualization": "Histogram of the 'stars' field", "rationale": "This visualization will help us understand the popularity of the repositories based on the number of stars they have received."}, {"index": 1, "question": "What is the distribution of the number of forks for the repositories?", "visualization": "Histogram of the 'forks' field", "rationale": "This visualization will help us understand how many times the repositories have been forked, which can indicate how many people are interested in contributing to the project."}, {"index": 2, "question": "What is the relationship between the number of stars and the number of forks for the repositories?", "visualization": "Scatter plot of the 'stars' and 'forks' fields", "rationale": "This visualization will help us understand if there is a correlation between the popularity of the repositories (number of stars) and the number of people interested in contributing to the project (number of forks)."}, {"index": 3, "question": "What is the distribution of the programming languages used in the repositories?", "visualization": "Bar chart of the 'language' field", "rationale": "This visualization will help us understand which programming languages are most commonly used in the repositories, which can indicate which languages are most popular among developers."}, {"index": 4, "question": "What is the distribution of the sizes of the repositories?", "visualization": "Histogram of the 'size' field", "rationale": "This visualization will help us understand the size of the repositories, which can indicate how complex the projects are and how much effort has been put into them."}], "code": [["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data=data, x='stars', bins=50, color='blue', kde=True)\n    plt.axvline(data['stars'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median: {:.2f}'.format(data['stars'].median())])\n    plt.title('What is the distribution of the number of stars for the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='forks', bins=20, kde=True, color='blue')\n    plt.axvline(data['forks'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median: {:.2f}'.format(data['forks'].median())])\n    plt.title('What is the distribution of the number of forks for the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.scatterplot(data=data, x='stars', y='forks')\n    plt.title(\"What is the relationship between the number of stars and the number of forks for the repositories?\", wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    language_counts = data['language'].value_counts()\n    plt.figure(figsize=(12, 6))\n    sns.barplot(x=language_counts.index, y=language_counts.values, palette='viridis')\n    plt.xlabel('Programming Languages')\n    plt.ylabel('Number of Repositories')\n    plt.xticks(rotation=45)\n    plt.title('What is the distribution of the programming languages used in the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='size', kde=True, color='blue')\n    median_size = data['size'].median()\n    plt.axvline(median_size, color='red', linestyle='--', label=f'Median: {median_size:.2f}')\n    plt.title('What is the distribution of the sizes of the repositories?', wrap=True)\n    plt.xlabel('Repository Size')\n    plt.ylabel('Frequency')\n    plt.legend()\n    return plt;\n\nchart = plot(data)"]], "filename": "github.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data=data, x='stars', bins=50, color='blue', kde=True)\n    plt.axvline(data['stars'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median: {:.2f}'.format(data['stars'].median())])\n    plt.title('What is the distribution of the number of stars for the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `stars` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 7, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 1430, in histplot\n    p = _DistributionPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 111, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `stars` for parameter `x`\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='forks', bins=20, kde=True, color='blue')\n    plt.axvline(data['forks'].median(), color='red', linestyle='dashed', linewidth=2)\n    plt.legend(['Median: {:.2f}'.format(data['forks'].median())])\n    plt.title('What is the distribution of the number of forks for the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `forks` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 1430, in histplot\n    p = _DistributionPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 111, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `forks` for parameter `x`\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.scatterplot(data=data, x='stars', y='forks')\n    plt.title(\"What is the relationship between the number of stars and the number of forks for the repositories?\", wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `stars` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_decorators.py\", line 46, in inner_f\n    return f(**kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/relational.py\", line 808, in scatterplot\n    p = _ScatterPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/relational.py\", line 587, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `stars` for parameter `x`\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    language_counts = data['language'].value_counts()\n    plt.figure(figsize=(12, 6))\n    sns.barplot(x=language_counts.index, y=language_counts.values, palette='viridis')\n    plt.xlabel('Programming Languages')\n    plt.ylabel('Number of Repositories')\n    plt.xticks(rotation=45)\n    plt.title('What is the distribution of the programming languages used in the repositories?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'language'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'language'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'language'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='size', kde=True, color='blue')\n    median_size = data['size'].median()\n    plt.axvline(median_size, color='red', linestyle='--', label=f'Median: {median_size:.2f}')\n    plt.title('What is the distribution of the sizes of the repositories?', wrap=True)\n    plt.xlabel('Repository Size')\n    plt.ylabel('Frequency')\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `size` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 1430, in histplot\n    p = _DistributionPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 111, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `size` for parameter `x`\n"}}]]}