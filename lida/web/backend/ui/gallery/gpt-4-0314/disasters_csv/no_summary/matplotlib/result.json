{"summary": {"file_name": "disasters.csv"}, "goals": [{"index": 0, "question": "What is the trend of natural disasters over the years?", "visualization": "Line chart of the number of disasters per year", "rationale": "This visualization will help us understand if there is an increase or decrease in the frequency of natural disasters over time."}, {"index": 1, "question": "Which type of natural disaster is the most frequent?", "visualization": "Bar chart of the count of each disaster type", "rationale": "This visualization will help us identify the most common type of natural disaster and prioritize our disaster response efforts accordingly."}, {"index": 2, "question": "What is the distribution of deaths caused by natural disasters?", "visualization": "Histogram of the number of deaths", "rationale": "This visualization will help us understand the severity of natural disasters and the potential impact on human life."}, {"index": 3, "question": "Which countries are most affected by natural disasters?", "visualization": "Map of the count of disasters by country", "rationale": "This visualization will help us identify the countries that are most vulnerable to natural disasters and allocate resources accordingly."}, {"index": 4, "question": "What is the economic impact of natural disasters?", "visualization": "Stacked bar chart of the cost of damages by disaster type", "rationale": "This visualization will help us understand the financial impact of natural disasters and prioritize our disaster response efforts accordingly."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    data['year'] = data['date'].dt.year\n    yearly_disasters = data.groupby('year').size()\n\n    plt.plot(yearly_disasters.index, yearly_disasters.values, label='Number of Disasters')\n    plt.xlabel('Year')\n    plt.ylabel('Number of Disasters')\n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    disaster_counts = data['disaster_type'].value_counts()\n    ax = disaster_counts.plot(kind='bar', color='tab:blue')\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Frequency')\n    plt.xticks(rotation=45)\n    max_disaster = disaster_counts.idxmax()\n    max_count = disaster_counts.max()\n    plt.axhline(y=max_count, color='r', linestyle='--', label=f'Most Frequent: {max_disaster} ({max_count:.2f})')\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['deaths'] = pd.to_numeric(data['deaths'], errors='coerce')\n    data = data[pd.notna(data['deaths'])]\n    \n    plt.hist(data['deaths'], bins=50, color='blue', alpha=0.7, label='Deaths')\n    plt.axvline(data['deaths'].median(), color='red', linestyle='dashed', linewidth=2, label=f\"Median: {data['deaths'].median():.2f}\")\n    \n    plt.xlabel('Number of Deaths')\n    plt.ylabel('Frequency')\n    plt.title('What is the distribution of deaths caused by natural disasters?', wrap=True)\n    plt.legend()\n    \n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    data_count = data.groupby('country').size().reset_index(name='count')\n    world_data = world.merge(data_count, left_on='name', right_on='country')\n\n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    world_data.plot(column='count', ax=ax, legend=True, cax=cax, cmap='coolwarm', edgecolor='black', linewidth=0.5)\n    plt.title('Which countries are most affected by natural disasters?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    \n    data_by_disaster = data.groupby(['disaster_type']).sum().reset_index()\n    data_by_disaster = data_by_disaster.sort_values(by='cost_of_damages', ascending=False)\n    \n    fig, ax = plt.subplots()\n    ax.bar(data_by_disaster['disaster_type'], data_by_disaster['cost_of_damages'])\n    ax.set_ylabel('Cost of Damages')\n    ax.set_xlabel('Disaster Type')\n    plt.xticks(rotation=45)\n    plt.title('What is the economic impact of natural disasters?', wrap=True)\n    plt.legend(data_by_disaster['disaster_type'], title='Disaster Types', loc='upper right')\n    \n    return plt;\n\nchart = plot(data)"]], "filename": "disasters.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    data['year'] = data['date'].dt.year\n    yearly_disasters = data.groupby('year').size()\n\n    plt.plot(yearly_disasters.index, yearly_disasters.values, label='Number of Disasters')\n    plt.xlabel('Year')\n    plt.ylabel('Number of Disasters')\n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    disaster_counts = data['disaster_type'].value_counts()\n    ax = disaster_counts.plot(kind='bar', color='tab:blue')\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Frequency')\n    plt.xticks(rotation=45)\n    max_disaster = disaster_counts.idxmax()\n    max_count = disaster_counts.max()\n    plt.axhline(y=max_count, color='r', linestyle='--', label=f'Most Frequent: {max_disaster} ({max_count:.2f})')\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'disaster_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'disaster_type'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'disaster_type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['deaths'] = pd.to_numeric(data['deaths'], errors='coerce')\n    data = data[pd.notna(data['deaths'])]\n    \n    plt.hist(data['deaths'], bins=50, color='blue', alpha=0.7, label='Deaths')\n    plt.axvline(data['deaths'].median(), color='red', linestyle='dashed', linewidth=2, label=f\"Median: {data['deaths'].median():.2f}\")\n    \n    plt.xlabel('Number of Deaths')\n    plt.ylabel('Frequency')\n    plt.title('What is the distribution of deaths caused by natural disasters?', wrap=True)\n    plt.legend()\n    \n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'deaths'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'deaths'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'deaths'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    data_count = data.groupby('country').size().reset_index(name='count')\n    world_data = world.merge(data_count, left_on='name', right_on='country')\n\n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    world_data.plot(column='count', ax=ax, legend=True, cax=cax, cmap='coolwarm', edgecolor='black', linewidth=0.5)\n    plt.title('Which countries are most affected by natural disasters?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'country'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'country'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    \n    data_by_disaster = data.groupby(['disaster_type']).sum().reset_index()\n    data_by_disaster = data_by_disaster.sort_values(by='cost_of_damages', ascending=False)\n    \n    fig, ax = plt.subplots()\n    ax.bar(data_by_disaster['disaster_type'], data_by_disaster['cost_of_damages'])\n    ax.set_ylabel('Cost of Damages')\n    ax.set_xlabel('Disaster Type')\n    plt.xticks(rotation=45)\n    plt.title('What is the economic impact of natural disasters?', wrap=True)\n    plt.legend(data_by_disaster['disaster_type'], title='Disaster Types', loc='upper right')\n    \n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}]]}