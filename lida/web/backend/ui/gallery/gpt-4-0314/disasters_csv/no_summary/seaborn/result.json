{"summary": {"file_name": "disasters.csv"}, "goals": [{"index": 0, "question": "What is the trend of natural disasters over the years?", "visualization": "Line chart of the number of disasters per year", "rationale": "This visualization will help us understand if there is an increase or decrease in the frequency of natural disasters over time."}, {"index": 1, "question": "Which type of natural disaster is the most frequent?", "visualization": "Bar chart of the count of each disaster type", "rationale": "This visualization will help us identify the most common type of natural disaster and prioritize our disaster response efforts accordingly."}, {"index": 2, "question": "What is the distribution of deaths caused by natural disasters?", "visualization": "Histogram of the number of deaths", "rationale": "This visualization will help us understand the severity of natural disasters and the potential impact on human life."}, {"index": 3, "question": "Which countries are most affected by natural disasters?", "visualization": "Map of the count of disasters by country", "rationale": "This visualization will help us identify the countries that are most vulnerable to natural disasters and allocate resources accordingly."}, {"index": 4, "question": "What is the economic impact of natural disasters?", "visualization": "Stacked bar chart of the cost of damages by disaster type", "rationale": "This visualization will help us understand the financial impact of natural disasters and prioritize our disaster response efforts accordingly."}], "code": [["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n    yearly_disasters = data.groupby('year').size().reset_index(name='count')\n\n    plt.figure(figsize=(12, 6))\n    sns.lineplot(x='year', y='count', data=yearly_disasters)\n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    plt.xlabel('Year')\n    plt.ylabel('Number of Disasters')\n    plt.xticks(rotation=45)\n    plt.legend(title='Disasters', loc='upper left', labels=['Natural Disasters'])\n\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    disaster_counts = data['disaster_type'].value_counts()\n    sns.barplot(x=disaster_counts.index, y=disaster_counts.values, palette='viridis')\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Count')\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='deaths', bins=20, kde=True, color='blue')\n    plt.axvline(data['deaths'].median(), color='red', linestyle='--', label=f\"Median: {data['deaths'].median():.2f}\")\n    plt.title(\"What is the distribution of deaths caused by natural disasters?\", wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    disaster_counts = data['country'].value_counts().reset_index()\n    disaster_counts.columns = ['country', 'count']\n    world_disasters = world.merge(disaster_counts, left_on='name', right_on='country', how='left')\n    world_disasters['count'] = world_disasters['count'].fillna(0)\n\n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    world_disasters.plot(column='count', ax=ax, legend=True, cax=cax, cmap='coolwarm', edgecolor='black', linewidth=0.5)\n    ax.set_title('Which countries are most affected by natural disasters?', wrap=True)\n    ax.set_axis_off()\n\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n\n    data = data.groupby(['disaster_type'])['cost_of_damages'].sum().reset_index()\n    data = data.sort_values('cost_of_damages', ascending=False)\n\n    sns.set(style=\"whitegrid\")\n    ax = sns.barplot(x='disaster_type', y='cost_of_damages', data=data, palette='viridis')\n    ax.set_title('What is the economic impact of natural disasters?', wrap=True)\n    ax.set_xlabel('Disaster Type')\n    ax.set_ylabel('Cost of Damages')\n    plt.xticks(rotation=45)\n    plt.legend(title='Disaster Types', loc='upper right', labels=data['disaster_type'].unique())\n\n    return plt;\n\nchart = plot(data)"]], "filename": "disasters.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n    yearly_disasters = data.groupby('year').size().reset_index(name='count')\n\n    plt.figure(figsize=(12, 6))\n    sns.lineplot(x='year', y='count', data=yearly_disasters)\n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    plt.xlabel('Year')\n    plt.ylabel('Number of Disasters')\n    plt.xticks(rotation=45)\n    plt.legend(title='Disasters', loc='upper left', labels=['Natural Disasters'])\n\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'year'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'year'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'year'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    disaster_counts = data['disaster_type'].value_counts()\n    sns.barplot(x=disaster_counts.index, y=disaster_counts.values, palette='viridis')\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Count')\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'disaster_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'disaster_type'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'disaster_type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='deaths', bins=20, kde=True, color='blue')\n    plt.axvline(data['deaths'].median(), color='red', linestyle='--', label=f\"Median: {data['deaths'].median():.2f}\")\n    plt.title(\"What is the distribution of deaths caused by natural disasters?\", wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `deaths` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 1430, in histplot\n    p = _DistributionPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 111, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `deaths` for parameter `x`\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    disaster_counts = data['country'].value_counts().reset_index()\n    disaster_counts.columns = ['country', 'count']\n    world_disasters = world.merge(disaster_counts, left_on='name', right_on='country', how='left')\n    world_disasters['count'] = world_disasters['count'].fillna(0)\n\n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    world_disasters.plot(column='count', ax=ax, legend=True, cax=cax, cmap='coolwarm', edgecolor='black', linewidth=0.5)\n    ax.set_title('Which countries are most affected by natural disasters?', wrap=True)\n    ax.set_axis_off()\n\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'country'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'country'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 9, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'country'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n\n    data = data.groupby(['disaster_type'])['cost_of_damages'].sum().reset_index()\n    data = data.sort_values('cost_of_damages', ascending=False)\n\n    sns.set(style=\"whitegrid\")\n    ax = sns.barplot(x='disaster_type', y='cost_of_damages', data=data, palette='viridis')\n    ax.set_title('What is the economic impact of natural disasters?', wrap=True)\n    ax.set_xlabel('Disaster Type')\n    ax.set_ylabel('Cost of Damages')\n    plt.xticks(rotation=45)\n    plt.legend(title='Disaster Types', loc='upper right', labels=data['disaster_type'].unique())\n\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}]]}