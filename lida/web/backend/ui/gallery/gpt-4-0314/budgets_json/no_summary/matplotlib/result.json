{"summary": {"file_name": "budgets.json"}, "goals": [{"index": 0, "question": "What is the distribution of budget amounts across different categories?", "visualization": "Bar chart of budget amounts by category", "rationale": "This visualization will help us understand which categories have the highest and lowest budgets, and how they compare to each other."}, {"index": 1, "question": "What is the trend in budget amounts over time?", "visualization": "Line chart of budget amounts by year", "rationale": "This visualization will help us understand how the budget amounts have changed over time, and whether there are any patterns or trends."}, {"index": 2, "question": "What is the distribution of budget amounts by department?", "visualization": "Bar chart of budget amounts by department", "rationale": "This visualization will help us understand which departments have the highest and lowest budgets, and how they compare to each other."}, {"index": 3, "question": "What is the distribution of budget amounts by fund type?", "visualization": "Pie chart of budget amounts by fund type", "rationale": "This visualization will help us understand the proportion of budget amounts that come from different fund types, and how they compare to each other."}, {"index": 4, "question": "What is the relationship between budget amounts and actual expenditures?", "visualization": "Scatter plot of budget amounts vs actual expenditures", "rationale": "This visualization will help us understand how closely the budget amounts align with the actual expenditures, and whether there are any outliers or patterns."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by category and sum the budget amounts\n    grouped_data = data.groupby('category')['budget'].sum().reset_index()\n\n    # Create a bar chart of budget amounts by category\n    plt.bar(grouped_data['category'], grouped_data['budget'])\n\n    # Set chart title and labels\n    plt.title('What is the distribution of budget amounts across different categories?')\n    plt.xlabel('Category')\n    plt.ylabel('Budget Amount')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add a legend\n    plt.legend(['Budget Amounts'])\n\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    data['year'] = data['date'].dt.year\n    yearly_budget = data.groupby('year')['budget'].sum().reset_index()\n\n    plt.plot(yearly_budget['year'], yearly_budget['budget'])\n    plt.xlabel('Year')\n    plt.ylabel('Budget Amount')\n    plt.title('What is the trend in budget amounts over time?', wrap=True)\n    plt.legend(['Budget Amount'])\n\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by department and sum the budget amounts\n    grouped_data = data.groupby('department')['budget'].sum().reset_index()\n\n    # Create a bar chart\n    plt.bar(grouped_data['department'], grouped_data['budget'])\n\n    # Set chart title\n    plt.title('What is the distribution of budget amounts by department?', wrap=True)\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add legend\n    plt.legend(['Budget Amounts'])\n\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by fund type and sum budget amounts\n    fund_type_budgets = data.groupby('fund_type')['budget_amount'].sum()\n\n    # Create pie chart\n    plt.pie(fund_type_budgets, labels=fund_type_budgets.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of budget amounts by fund type?', wrap=True)\n    plt.legend(fund_type_budgets.index, title=\"Fund Types\", loc=\"best\")\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.scatter(data['budget_amounts'], data['actual_expenditures'])\n    plt.xlabel('Budget Amounts')\n    plt.ylabel('Actual Expenditures')\n    plt.title('What is the relationship between budget amounts and actual expenditures?', wrap=True)\n    return plt;\n\nchart = plot(data)"]], "filename": "budgets.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by category and sum the budget amounts\n    grouped_data = data.groupby('category')['budget'].sum().reset_index()\n\n    # Create a bar chart of budget amounts by category\n    plt.bar(grouped_data['category'], grouped_data['budget'])\n\n    # Set chart title and labels\n    plt.title('What is the distribution of budget amounts across different categories?')\n    plt.xlabel('Category')\n    plt.ylabel('Budget Amount')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add a legend\n    plt.legend(['Budget Amounts'])\n\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'category'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'category'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['date'] = pd.to_datetime(data['date'], errors='coerce')\n    data = data[pd.notna(data['date'])]\n    data['year'] = data['date'].dt.year\n    yearly_budget = data.groupby('year')['budget'].sum().reset_index()\n\n    plt.plot(yearly_budget['year'], yearly_budget['budget'])\n    plt.xlabel('Year')\n    plt.ylabel('Budget Amount')\n    plt.title('What is the trend in budget amounts over time?', wrap=True)\n    plt.legend(['Budget Amount'])\n\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by department and sum the budget amounts\n    grouped_data = data.groupby('department')['budget'].sum().reset_index()\n\n    # Create a bar chart\n    plt.bar(grouped_data['department'], grouped_data['budget'])\n\n    # Set chart title\n    plt.title('What is the distribution of budget amounts by department?', wrap=True)\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add legend\n    plt.legend(['Budget Amounts'])\n\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'department'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'department'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group data by fund type and sum budget amounts\n    fund_type_budgets = data.groupby('fund_type')['budget_amount'].sum()\n\n    # Create pie chart\n    plt.pie(fund_type_budgets, labels=fund_type_budgets.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of budget amounts by fund type?', wrap=True)\n    plt.legend(fund_type_budgets.index, title=\"Fund Types\", loc=\"best\")\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'fund_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'fund_type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.scatter(data['budget_amounts'], data['actual_expenditures'])\n    plt.xlabel('Budget Amounts')\n    plt.ylabel('Actual Expenditures')\n    plt.title('What is the relationship between budget amounts and actual expenditures?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'budget_amounts'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'budget_amounts'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'budget_amounts'\n"}}]]}