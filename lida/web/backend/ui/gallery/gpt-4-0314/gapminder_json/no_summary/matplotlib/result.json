{"summary": {"file_name": "gapminder.json"}, "goals": [{"index": 0, "question": "What is the relationship between life expectancy and GDP per capita?", "visualization": "Scatter plot of life expectancy vs GDP per capita", "rationale": "This visualization can help us understand if there is a correlation between a country's wealth and the life expectancy of its citizens."}, {"index": 1, "question": "What is the trend of population growth over time?", "visualization": "Line chart of population vs year", "rationale": "This visualization can help us understand if the world population is increasing or decreasing over time."}, {"index": 2, "question": "What is the distribution of income per person across different regions?", "visualization": "Box plot of income per person by region", "rationale": "This visualization can help us understand the income distribution across different regions and identify any outliers."}, {"index": 3, "question": "What is the trend of child mortality rate over time?", "visualization": "Line chart of child mortality rate vs year", "rationale": "This visualization can help us understand if child mortality rate is decreasing over time and identify any countries that need more attention."}, {"index": 4, "question": "What is the relationship between fertility rate and life expectancy?", "visualization": "Scatter plot of fertility rate vs life expectancy", "rationale": "This visualization can help us understand if there is a correlation between a country's fertility rate and the life expectancy of its citizens."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    scatter = ax.scatter(data['gdpPercap'], data['lifeExp'], c=data['year'], cmap='viridis', alpha=0.5)\n    ax.set_xlabel('GDP per Capita')\n    ax.set_ylabel('Life Expectancy')\n    ax.set_title('What is the relationship between life expectancy and GDP per capita?')\n    cbar = plt.colorbar(scatter, ax=ax)\n    cbar.set_label('Year')\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n\n    plt.plot(data['year'], data['population'])\n    plt.xlabel('Year')\n    plt.ylabel('Population')\n    plt.title('What is the trend of population growth over time?', wrap=True)\n    plt.legend(['Population Growth'])\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    data.boxplot(column='income_per_person', by='region', ax=ax)\n    ax.set_title('What is the distribution of income per person across different regions?')\n    ax.set_xlabel('Region')\n    ax.set_ylabel('Income per person')\n    plt.xticks(rotation=45)\n    plt.legend(title='Region', loc='upper right')\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n\n    countries = data['country'].unique()\n    for country in countries:\n        country_data = data[data['country'] == country]\n        plt.plot(country_data['year'], country_data['child_mortality_rate'], label=country)\n\n    plt.xlabel('Year')\n    plt.ylabel('Child Mortality Rate')\n    plt.title('What is the trend of child mortality rate over time?', wrap=True)\n    plt.legend(loc='upper right', bbox_to_anchor=(1.3, 1))\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    scatter = ax.scatter(data['fertility_rate'], data['life_expectancy'], c=data['year'], cmap='viridis')\n    plt.xlabel('Fertility Rate')\n    plt.ylabel('Life Expectancy')\n    plt.title('What is the relationship between fertility rate and life expectancy?', wrap=True)\n    cbar = plt.colorbar(scatter)\n    cbar.set_label('Year')\n    return plt;\n\nchart = plot(data)"]], "filename": "gapminder.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    scatter = ax.scatter(data['gdpPercap'], data['lifeExp'], c=data['year'], cmap='viridis', alpha=0.5)\n    ax.set_xlabel('GDP per Capita')\n    ax.set_ylabel('Life Expectancy')\n    ax.set_title('What is the relationship between life expectancy and GDP per capita?')\n    cbar = plt.colorbar(scatter, ax=ax)\n    cbar.set_label('Year')\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'gdpPercap'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'gdpPercap'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'gdpPercap'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n\n    plt.plot(data['year'], data['population'])\n    plt.xlabel('Year')\n    plt.ylabel('Population')\n    plt.title('What is the trend of population growth over time?', wrap=True)\n    plt.legend(['Population Growth'])\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'population'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'population'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 9, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'population'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    data.boxplot(column='income_per_person', by='region', ax=ax)\n    ax.set_title('What is the distribution of income per person across different regions?')\n    ax.set_xlabel('Region')\n    ax.set_ylabel('Income per person')\n    plt.xticks(rotation=45)\n    plt.legend(title='Region', loc='upper right')\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'region'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/plotting/_core.py\", line 511, in boxplot_frame\n    return plot_backend.boxplot_frame(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/plotting/_matplotlib/boxplot.py\", line 425, in boxplot_frame\n    ax = boxplot(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/plotting/_matplotlib/boxplot.py\", line 372, in boxplot\n    result = _grouped_plot_by_column(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/plotting/_matplotlib/boxplot.py\", line 233, in _grouped_plot_by_column\n    grouped = data.groupby(by)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'region'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], errors='coerce')\n    data = data[pd.notna(data['year'])]\n    data['year'] = data['year'].dt.year\n\n    countries = data['country'].unique()\n    for country in countries:\n        country_data = data[data['country'] == country]\n        plt.plot(country_data['year'], country_data['child_mortality_rate'], label=country)\n\n    plt.xlabel('Year')\n    plt.ylabel('Child Mortality Rate')\n    plt.title('What is the trend of child mortality rate over time?', wrap=True)\n    plt.legend(loc='upper right', bbox_to_anchor=(1.3, 1))\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'child_mortality_rate'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'child_mortality_rate'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 12, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'child_mortality_rate'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    fig, ax = plt.subplots()\n    scatter = ax.scatter(data['fertility_rate'], data['life_expectancy'], c=data['year'], cmap='viridis')\n    plt.xlabel('Fertility Rate')\n    plt.ylabel('Life Expectancy')\n    plt.title('What is the relationship between fertility rate and life expectancy?', wrap=True)\n    cbar = plt.colorbar(scatter)\n    cbar.set_label('Year')\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'fertility_rate'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'fertility_rate'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'fertility_rate'\n"}}]]}