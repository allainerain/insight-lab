{"summary": {"name": "udistrict.json", "file_name": "udistrict.json", "dataset_description": "A dataset containing information about restaurants in the University District", "field_names": ["key", "lat"], "fields": [{"column": "key", "properties": {"dtype": "category", "samples": ["thai", "japanese", "seafood"], "num_unique_values": 19, "semantic_type": "cuisine_type", "description": "The type of cuisine served by the restaurant"}}, {"column": "lat", "properties": {"dtype": "number", "std": 0.0036350310995065314, "min": 47.65161, "max": 47.6698722839355, "samples": [47.6679654176159, 47.65553, 47.66093], "num_unique_values": 126, "semantic_type": "latitude", "description": "The latitude of the restaurant's location"}}]}, "goals": [{"index": 0, "question": "What is the most common cuisine type in the University District?", "visualization": "bar chart of cuisine type frequency", "rationale": "This helps identify the dominant cuisine type in the area and can inform business decisions for new restaurants."}, {"index": 1, "question": "What is the distribution of restaurant locations in the University District?", "visualization": "scatter plot of latitude and longitude", "rationale": "This helps identify any clustering or patterns in restaurant locations and can inform decisions on where to open a new restaurant."}, {"index": 2, "question": "What is the average rating of restaurants in the University District?", "visualization": "box plot of restaurant ratings", "rationale": "This helps identify the overall quality of restaurants in the area and can inform decisions on where to dine."}, {"index": 3, "question": "What is the relationship between cuisine type and restaurant rating in the University District?", "visualization": "scatter plot of cuisine type and rating", "rationale": "This helps identify which cuisine types tend to have higher ratings and can inform decisions on what type of restaurant to open."}, {"index": 4, "question": "What is the distribution of restaurant ratings in the University District?", "visualization": "histogram of restaurant ratings", "rationale": "This helps identify the overall distribution of restaurant ratings in the area and can inform decisions on where to dine."}], "code": [["```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    cuisine_type = data['key'].value_counts()\n    cuisine_type.plot(kind='bar', color='green')\n    plt.xlabel('Cuisine Type')\n    plt.ylabel('Frequency')\n    plt.title('What is the most common cuisine type in the University District?')\n    plt.axhline(y=cuisine_type.max(), color='red', linestyle='--', label='Max Frequency: {:.2f}'.format(cuisine_type.max()))\n    plt.legend()\n    return plt\n\nchart = plot(data)\n```"], ["```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.scatter(data['lat'], data['lng'], alpha=0.5, color='blue')\n    plt.xlabel('Latitude')\n    plt.ylabel('Longitude')\n    plt.title('What is the distribution of restaurant locations in the University District?')\n    return plt\n\nchart = plot(data)\n```"], ["```\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\ndef plot(data: pd.DataFrame):\n    sns.set(style=\"whitegrid\")\n    fig, ax = plt.subplots(figsize=(8, 6))\n    ax = sns.boxplot(x=data['rating'], color='lightblue')\n    ax.set_xlabel('Rating')\n    ax.set_title('What is the average rating of restaurants in the University District?')\n    ax.axvline(x=data['rating'].mean(), color='red', linestyle='--', label=f\"Mean: {data['rating'].mean():.2f}\")\n    ax.legend(loc='upper right')\n    return plt\n\nchart = plot(data)\n```"], ["```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data = data[['key', 'rating']]\n    data = data.groupby('key').mean().reset_index()\n    plt.scatter(data['key'], data['rating'])\n    plt.xlabel('Cuisine Type')\n    plt.ylabel('Average Rating')\n    plt.xticks(rotation=90)\n    plt.title('What is the relationship between cuisine type and restaurant rating in the University District?')\n    return plt\n\nchart = plot(data)\n```"], ["```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.hist(data['rating'], bins=10, color='green')\n    plt.axvline(data['rating'].mean(), color='red', linestyle='dashed', linewidth=1, label='Mean Rating: {:.2f}'.format(data['rating'].mean()))\n    plt.xlabel('Rating')\n    plt.ylabel('Frequency')\n    plt.legend(loc='upper left')\n    plt.title('What is the distribution of restaurant ratings in the University District?', wrap=True)\n    return plt\n\nchart = plot(data)\n```"]], "filename": "udistrict.json", "chart": [[{"spec": null, "status": true, "raster": "", "code": "\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    cuisine_type = data['key'].value_counts()\n    cuisine_type.plot(kind='bar', color='green')\n    plt.xlabel('Cuisine Type')\n    plt.ylabel('Frequency')\n    plt.title('What is the most common cuisine type in the University District?')\n    plt.axhline(y=cuisine_type.max(), color='red', linestyle='--', label='Max Frequency: {:.2f}'.format(cuisine_type.max()))\n    plt.legend()\n    return plt\n\nchart = plot(data)\n", "library": "matplotlib", "error": null}], [{"spec": null, "status": false, "raster": null, "code": "\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.scatter(data['lat'], data['lng'], alpha=0.5, color='blue')\n    plt.xlabel('Latitude')\n    plt.ylabel('Longitude')\n    plt.title('What is the distribution of restaurant locations in the University District?')\n    return plt\n\nchart = plot(data)\n", "library": "matplotlib", "error": {"message": "'lng'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'lng'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'lng'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\ndef plot(data: pd.DataFrame):\n    sns.set(style=\"whitegrid\")\n    fig, ax = plt.subplots(figsize=(8, 6))\n    ax = sns.boxplot(x=data['rating'], color='lightblue')\n    ax.set_xlabel('Rating')\n    ax.set_title('What is the average rating of restaurants in the University District?')\n    ax.axvline(x=data['rating'].mean(), color='red', linestyle='--', label=f\"Mean: {data['rating'].mean():.2f}\")\n    ax.legend(loc='upper right')\n    return plt\n\nchart = plot(data)\n", "library": "matplotlib", "error": {"message": "'rating'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'rating'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 9, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'rating'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data = data[['key', 'rating']]\n    data = data.groupby('key').mean().reset_index()\n    plt.scatter(data['key'], data['rating'])\n    plt.xlabel('Cuisine Type')\n    plt.ylabel('Average Rating')\n    plt.xticks(rotation=90)\n    plt.title('What is the relationship between cuisine type and restaurant rating in the University District?')\n    return plt\n\nchart = plot(data)\n", "library": "matplotlib", "error": {"message": "\"['rating'] not in index\"", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3511, in __getitem__\n    indexer = self.columns._get_indexer_strict(key, \"columns\")[1]\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 5782, in _get_indexer_strict\n    self._raise_if_missing(keyarr, indexer, axis_name)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 5845, in _raise_if_missing\n    raise KeyError(f\"{not_found} not in index\")\nKeyError: \"['rating'] not in index\"\n"}}], [{"spec": null, "status": false, "raster": null, "code": "\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.hist(data['rating'], bins=10, color='green')\n    plt.axvline(data['rating'].mean(), color='red', linestyle='dashed', linewidth=1, label='Mean Rating: {:.2f}'.format(data['rating'].mean()))\n    plt.xlabel('Rating')\n    plt.ylabel('Frequency')\n    plt.legend(loc='upper left')\n    plt.title('What is the distribution of restaurant ratings in the University District?', wrap=True)\n    return plt\n\nchart = plot(data)\n", "library": "matplotlib", "error": {"message": "'rating'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'rating'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'rating'\n"}}]]}